#!/usr/bin/env bash

DND_STATUS() {
  osascript << END
tell application "System Events"
  tell application process "SystemUIServer"
    tell (every menu bar whose title of menu bar item 1 contains "Notification")
      return title of (1st menu bar item whose title contains "Notification")
    end tell
  end tell
end tell
END
}

MSG=""

# HOSTNAME=$(hostname | cut -d. -f1)
# if [[ ! $HOSTNAME =~ [Oo]rchid ]]; then
#   MSG="$HOSTNAME : "
# fi

LOAD=$(uptime | sed 's/.*load average: //' | awk -F\, '{print $1}')
MSG="$MSG$LOAD"

# calculating CPU percentage is slow... (probably because of `top`)
# if uname | grep -q "Darwin"; then
#   CPU_LINE=$(top -l 2 -R | grep "CPU usage:" | tail -1 | sed 's/CPU usage: //')
#   CPU=$(echo "$CPU_LINE" | awk '{printf "%02.0f%\n", $1}')
# else
#   CPU=$(grep "cpu " /proc/stat | awk '{usage=($2+$4)*100/($2+$4+$5)} END {printf "%02.0f%\n", usage}')
# fi
# MSG="$MSG$CPU"

if uname | grep -q "Darwin"; then
  PMSET=$(pmset -g ps | awk 'NR==2')

  if echo "$PMSET" | grep -q "\ charging\|no\ estimate"; then
    BATTERY_PERCENT=$(echo "$PMSET" | sed -n 's/.*[[:blank:]]+*\([0-9]*%\).*/\1/p')
    MSG="$MSG : $BATTERY_PERCENT"
  elif echo "$PMSET" | grep -q "discharging"; then
    BATTERY_TIME=$(echo "$PMSET" | sed -n 's/.*[[:blank:]]+*\([0-9]*\:[0-9]*\)\ .*/\1/p')"h"
    MSG="$MSG : $BATTERY_TIME"
  fi

  if scutil --nc list | grep -q "Connected"; then
    MSG="$MSG : VPN"
  fi

  if DND_STATUS | grep -q "Do Not Disturb"; then
    MSG="$MSG : DND"
  fi
fi

echo "$MSG"
